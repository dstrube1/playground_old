<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute">

<mx:Script>
        <![CDATA[
        	import mx.controls.Label;
        	import mx.controls.Alert;
            [Embed ("Interstate.ttf", fontName="MyInterstate")]
            public var interstate_font:Class;
            
            private function showSummaryDescription():void{
            	Alert.show("This is an example of using buttons instead of tabs."+
            		" The buttons can be rotated 90 (or x) degrees, but their label disappears if angle != 0."+
            		" So we use a label. The label is also rotated. (The label disappears if the font is not embedded.)"+
            		" The buttons' click calls a function with a parameter that refers to the Vboxes being shown/hidden."+
            		" It's a long-winded solution, but not complicated and easily (but meticulously) adjusted.");
            }
            
            private function showFancyDescription():void{
            	Alert.show("This is an example of using a viewStack with a tabBar."+
            		" The first and most obvious drawback is it requires an image for each tab."+
            		" The text of these images is not easily changed and requires work that goes beyond Flex if you want a mouseOver effect."+
            		" Otherwise this would be an ideal solution.");
            		var l:Label = new Label();
            		l.setStyle("fontFamily", "MyInterstate");
            }
            

            private function show(view:uint):void{
            	switch (view){
	            	case 1:
	            		v1.visible = true;
	            		v2.visible = false;
	            		v3.visible = false;
	            		v4.visible = false;
		            	break;
	            	case 2:
	            		v1.visible = false;
	            		v2.visible = true;
	            		v3.visible = false;
	            		v4.visible = false;
		            	break;
	            	case 3:
	            		v1.visible = false;
	            		v2.visible = false;
	            		v3.visible = true;
	            		v4.visible = false;
		            	break;
	            	case 4:
	            		v1.visible = false;
	            		v2.visible = false;
	            		v3.visible = false;
	            		v4.visible = true;
		            	break;
		            default:
		            	v1.visible = true;
	            		v2.visible = false;
	            		v3.visible = false;
	            		v4.visible = false;
            	}
            }
       ]]>
    </mx:Script>

<mx:TabNavigator height="75%" width="75%" id="main">

<mx:HBox label="Not Summary">
	<mx:Label text="We are the not summary" />
	<mx:DataGrid id="dg">
	<!-- test 
	dgColumn.setPropertiesAt(2, {backgroundColor:0xFF0000});
	-->
	</mx:DataGrid>
</mx:HBox>

<mx:HBox label="Summary">
	<mx:Canvas id="canvas" height="100%" width="100%">
	
	<!-- The Views -->
	<mx:VBox label="View 1" height="100%" width="100%" horizontalAlign="center" visible="true" id="v1" >
		<mx:Label text="View 1" fontSize="36"/>
		<mx:Button label="description" click="showSummaryDescription()"/>
	</mx:VBox>

	<mx:VBox label="View 2" height="100%" width="100%" horizontalAlign="center" visible="false" id="v2" backgroundColor="green">
		<mx:Label text="View 2" fontSize="36"/>
	</mx:VBox>

	<mx:VBox label="View 3" height="100%" width="100%" horizontalAlign="center" visible="false" id="v3" backgroundColor="blue">
		<mx:Label text="View 3" fontSize="36"/>
	</mx:VBox>

	<mx:VBox label="View 4" height="100%" width="100%" horizontalAlign="center" visible="false" id="v4" backgroundColor="yellow">
		<mx:Label text="View 4" fontSize="36"/>
	</mx:VBox>

	<!-- The Controlling buttons -->
	<mx:Label x="{b1.x-5}" y="{b1.y+5}" text="Summary" fontFamily="MyInterstate" rotation="90"  width="60"/>
	<mx:Button x="700" y="0" rotation="90" alpha="0.5" id="b1" label="Summ" click="show(1);"/>

	<mx:Label x="{b1.x-5}" y="{b2.y+5}" text="Initiation Time" fontFamily="MyInterstate" rotation="90"  width="80"/>
	<mx:Button x="{b1.x}" y="65" rotation="90" alpha="0.5"  id="b2" label="Initiation" click="show(2);"/>

	<mx:Label x="{b1.x-5}" y="{b3.y+5}" text="Enrollement Time" fontFamily="MyInterstate" rotation="90" width="91"/>
	<mx:Button x="{b1.x}" y="150" rotation="90" alpha="0.5" id="b3"  label="Enrollement" click="show(3);"/>

	<mx:Label x="{b1.x-5}" y="{b4.y+5}" text="Subject Contribution" fontFamily="MyInterstate" rotation="90" width="110" />
	<mx:Button x="{b1.x}" y="250" rotation="90" alpha="0.5"  id="b4" label="Subject Contri" click="show(4);"/>

	</mx:Canvas>

</mx:HBox>	

<mx:HBox label="Fancy">
	<mx:ViewStack id="viewstack1" width="400" height="400"
             backgroundAlpha="1.0" backgroundColor="0xffffff"
             paddingBottom="20" paddingLeft="20" paddingRight="20" paddingTop="20"
             historyManagementEnabled="true">
             
            <mx:VBox label="View 1" width="100%" height="100%" horizontalAlign="center">
                <mx:Label text="View 1" fontSize="36" />
				<mx:Button label="description" click="showFancyDescription()"/>
            </mx:VBox>
            
            <mx:VBox label="View 2" width="100%" height="100%" horizontalAlign="center">
                <mx:Label text="View 2" fontSize="36" />
            </mx:VBox>
            
            <mx:VBox label="View 3" width="100%" height="100%" horizontalAlign="center">
                <mx:Label text="View 3" fontSize="36" />
            </mx:VBox>
            
        </mx:ViewStack>
        <mx:TabBar direction="vertical" verticalGap="2"
        	tabHeight="80" width="28"
        	dataProvider="{viewstack1}">
        	<mx:Script>
	        <![CDATA[
	            import mx.core.UITextField;
	            import mx.controls.Button;
	            import mx.core.mx_internal;
	          
	            override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
            {
                super.updateDisplayList(unscaledWidth, unscaledHeight);
                //called constantly:
                //Alert.show("in updateDisplayList");
	          /*  
                var i:int = 0;
                var b:Button = null;
                var txt:UITextField = null;
                
                for(i = 0; i < this.numChildren; i++){
                    b = getChildAt(i) as Button;
                    txt = b.mx_internal::getTextField();
                    txt.text = "";
                    txt.visible = false;
                    /*
                    if(icons[i]){
                        b.setStyle("icon", icons[i]);
                    }
                    * /
                }
            */
            }
        		]]>
	        	</mx:Script>
        </mx:TabBar>
</mx:HBox>


</mx:TabNavigator>

</mx:Application>
